{"ast":null,"code":"var _jsxFileName = \"/home/tonyce/Desktop/Repos/project-sustainable-life/Antony/src/components/styledComponents/RoundButton.jsx\";\nimport { useState, useEffect, useRef } from \"react/cjs/react.development\";\nimport react from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RoundButton(props) {\n  const Button = styled.button`\n    /* padding: 6px; */\n    height: 38px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #6c757d;\n    /* background-color: #ffffff; */\n    border-radius: 14px;\n    margin-bottom: 56px;\n    /* text........ */\n    font-family: \"Rubik\", sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: ${props.isBig ? \"16px\" : \"14px\"};\n    line-height: 16px;\n    letter-spacing: 1.25px;\n    /* text-transform: uppercase; */\n\n    /* color: #212121; */\n    color: ${props.state ? \"white\" : \" #212121\"};\n    background-color: ${props.state ? \" #149f65\" : \"#ffffff\"};\n    border: ${selected ? \"none\" : \"solid ##6c757d 1px\"};\n  `; //   useEffect(() => {\n  //     //setSelected(ref.current);\n  //    // console.log(\"effect called...............\", ref.current);\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      props.handleIsSelected(props.name); // setSelected(true);\n      // console.log(props.children);\n      // ref.current = true;\n      //console.log(ref.current, \"ref current...........\");\n      //   setSelected(ref.current);\n    },\n    children: [\" \", props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = RoundButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundButton\");","map":{"version":3,"sources":["/home/tonyce/Desktop/Repos/project-sustainable-life/Antony/src/components/styledComponents/RoundButton.jsx"],"names":["useState","useEffect","useRef","react","styled","RoundButton","props","Button","button","isBig","state","selected","handleIsSelected","name","children"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,6BAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBF,KAAK,CAACG,KAAN,GAAc,MAAd,GAAuB,MAAO;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAaH,KAAK,CAACI,KAAN,GAAc,OAAd,GAAwB,UAAW;AAChD,wBAAwBJ,KAAK,CAACI,KAAN,GAAc,UAAd,GAA2B,SAAU;AAC7D,cAAcC,QAAQ,GAAG,MAAH,GAAY,oBAAqB;AACvD,GAvBE,CADiC,CA0BjC;AACA;AACA;AACA;;AACA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,KAAK,CAACM,gBAAN,CAAuBN,KAAK,CAACO,IAA7B,EADa,CAEb;AACA;AACA;AACA;AACA;AACD,KARH;AAAA,eAUG,GAVH,EAWGP,KAAK,CAACQ,QAXT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KA7CeT,W","sourcesContent":["import { useState, useEffect, useRef } from \"react/cjs/react.development\";\nimport react from \"react\";\nimport styled from \"styled-components\";\n\nexport function RoundButton(props) {\n  const Button = styled.button`\n    /* padding: 6px; */\n    height: 38px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #6c757d;\n    /* background-color: #ffffff; */\n    border-radius: 14px;\n    margin-bottom: 56px;\n    /* text........ */\n    font-family: \"Rubik\", sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: ${props.isBig ? \"16px\" : \"14px\"};\n    line-height: 16px;\n    letter-spacing: 1.25px;\n    /* text-transform: uppercase; */\n\n    /* color: #212121; */\n    color: ${props.state ? \"white\" : \" #212121\"};\n    background-color: ${props.state ? \" #149f65\" : \"#ffffff\"};\n    border: ${selected ? \"none\" : \"solid ##6c757d 1px\"};\n  `;\n\n  //   useEffect(() => {\n  //     //setSelected(ref.current);\n  //    // console.log(\"effect called...............\", ref.current);\n  //   }, []);\n  return (\n    <Button\n      onClick={() => {\n        props.handleIsSelected(props.name);\n        // setSelected(true);\n        // console.log(props.children);\n        // ref.current = true;\n        //console.log(ref.current, \"ref current...........\");\n        //   setSelected(ref.current);\n      }}\n    >\n      {\" \"}\n      {props.children}\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}